{"version":3,"file":"static/js/276.0b2515e3.chunk.js","mappings":"2KAGA,MAAMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EACpBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,sDAAAE,OAEMD,EAAME,QAAQ,GAAE,YAInB,SAASC,IACtB,OACEC,EAAAA,EAAAA,KAACR,EAAa,CAAAS,UACZD,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIF,UACtBD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CACFU,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBAAeT,UAE9BD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAO,UACFD,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACC,QAAQ,YAAWX,SAAC,+EAQ5C,C,sECTA,QAnBA,WACE,OACED,EAAAA,EAAAA,KAACa,EAAAA,EAAO,CAACC,MAAM,0DAAiDC,OAAK,EACrEC,MAAO,CACLC,WAAY,OACZC,cAAe,OACfC,YAAa,OACbC,aAAc,QACdnB,UAEAD,EAAAA,EAAAA,KAAA,OACEqB,IAAI,sBACJC,MAAO,MACPC,IAAI,8CAIZ,C,0FCbA,MAAMC,GAAY/B,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAChBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,4BAAAE,OACOD,EAAME,QAAQ,EAAG,GAAE,UAwBtC,EAhBoD2B,IAAmB,IAAlB,SAAExB,GAAUwB,EAC/D,OACEzB,EAAAA,EAAAA,KAAA0B,EAAAA,SAAA,CAAAzB,UACED,EAAAA,EAAAA,KAACwB,EAAS,CAAAvB,UACRD,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIF,SACrBA,OAGJ,C,wGCdP,QARA,WACE,OACED,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIF,UACtBD,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,MAAI,EAACtB,GAAI,MAGrB,E,wGCPA,MAAMuB,E,QAAiBC,EAAIC,gBAAgB,CACzCC,UAAYC,IAAK,CACfC,uBAAwBD,EAAME,SAG5B,CACAC,MAAQC,IAAQ,CACdC,IAAI,wBACJC,OAAQ,OACRC,KAAMH,EAASI,cAGnBC,6BAA8BT,EAAME,SAGlC,CACAC,MAAQC,IAAQ,CACdC,IAAI,+BACJC,OAAQ,OACRC,KAAMH,EAASI,cAGnBE,gBAAiBV,EAAME,SAGrB,CACAC,MAAQC,IAAQ,CACdC,IAAI,gBACJC,OAAQ,OACRC,KAAMH,EAASI,cAGnBG,mBAAoBX,EAAMG,MAGxB,CACAA,MAAOA,KAAA,CAASE,IAAI,yBAEtBO,WAAYZ,EAAMG,MAA+C,CAC/DA,MAAOA,KAAA,CAASE,IAAI,gBAEtBQ,UAAWb,EAAMG,MAA6C,CAC5DA,MAAQC,IAAQ,CACdC,IAAI,UACJS,OAAQ,CACNC,KAAMX,EAASW,KACfC,WAAYZ,EAASY,WACrBC,OAAQb,EAASa,OACjBC,SAAUd,EAASc,SACnBC,QAASf,EAASe,QAClBC,OAAQhB,EAASgB,YAIvBC,WAAYrB,EAAME,SAAkD,CAClEC,MAAQC,IAAQ,CACdC,IAAI,UACJC,OAAQ,OACRC,KAAMH,EAASkB,iBAGnBC,cAAevB,EAAMG,MAAqD,CACxEA,MAAQC,IAAQ,CAAQC,IAAI,WAADzC,OAAawC,EAASoB,QAEnDC,cAAezB,EAAME,SAGnB,CACAC,MAAQC,IAAQ,CACdC,IAAI,WAADzC,OAAawC,EAASoB,IACzBlB,OAAQ,MACRC,KAAMH,EAASkB,iBAGnBI,iBAAkB1B,EAAME,SAGtB,CACAC,MAAQC,IAAQ,CAAQC,IAAI,WAADzC,OAAawC,EAASoB,IAAMlB,OAAQ,aAEjEqB,YAAa3B,EAAMG,MAAiD,CAClEA,MAAQC,IAAQ,CACdC,IAAI,YACJS,OAAQ,CACNC,KAAMX,EAASW,KACfC,WAAYZ,EAASY,WACrBC,OAAQb,EAASa,OACjBC,SAAUd,EAASc,SACnBC,QAASf,EAASe,QAClBC,OAAQhB,EAASgB,YAIvBQ,YAAa5B,EAAME,SAAoD,CACrEC,MAAQC,IAAQ,CACdC,IAAI,YACJC,OAAQ,MACRC,KAAMH,EAASyB,oBAGnBC,eAAgB9B,EAAME,SAGpB,CACAC,MAAOA,KAAA,CAASE,IAAI,YAAcC,OAAQ,aAE5CyB,WAAY/B,EAAME,SAAkD,CAClEC,MAAQC,IAAQ,CACdC,IAAI,UACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnByB,eAAgBhC,EAAMG,MAGpB,CACAA,MAAOA,KAAA,CAASE,IAAI,oBAEtB4B,mBAAoBjC,EAAMG,MAGxB,CACAA,MAAQC,IAAQ,CAAQC,IAAI,iBAADzC,OAAmBwC,EAASoB,QAEzDU,sBAAuBlC,EAAME,SAG3B,CACAC,MAAQC,IAAQ,CACdC,IAAI,iBAADzC,OAAmBwC,EAASoB,IAC/BlB,OAAQ,aAGZ6B,qBAAsBnC,EAAMG,MAG1B,CACAA,MAAQC,IAAQ,CAAQC,IAAI,YAADzC,OAAcwC,EAASgC,cAEpDC,cAAerC,EAAME,SAGnB,CACAC,MAAQC,IAAQ,CACdC,IAAI,cACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnB+B,sBAAuBtC,EAAME,SAG3B,CACAC,MAAQC,IAAQ,CACdC,IAAI,uBACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBgC,0BAA2BvC,EAAMG,MAG/B,CACAA,MAAQC,IAAQ,CAAQC,IAAI,SAADzC,OAAWwC,EAASgC,SAAQ,iBAEzDI,uBAAwBxC,EAAME,SAG5B,CACAC,MAAQC,IAAQ,CACdC,IAAI,wBACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBkC,sBAAuBzC,EAAME,SAG3B,CACAC,MAAQC,IAAQ,CACdC,IAAI,uBACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBmC,uBAAwB1C,EAAME,SAG5B,CACAC,MAAQC,IAAQ,CACdC,IAAI,wBACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBoC,yBAA0B3C,EAAMG,MAG9B,CACAA,MAAQC,IAAQ,CACdC,IAAI,2BACJS,OAAQ,CAAE8B,aAAcxC,EAASwC,kBAGrCC,8BAA+B7C,EAAME,SAGnC,CACAC,MAAQC,IAAQ,CACdC,IAAI,gCACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBuC,+BAAgC9C,EAAMG,MAGpC,CACAA,MAAOA,KAAA,CAASE,IAAI,qCAEtB0C,yBAA0B/C,EAAMG,MAG9B,CACAA,MAAOA,KAAA,CAASE,IAAI,+BAEtB2C,0BAA2BhD,EAAME,SAG/B,CACAC,MAAQC,IAAQ,CACdC,IAAI,2BACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnB0C,6BAA8BjD,EAAMG,MAGlC,CACAA,MAAQC,IAAQ,CAAQC,IAAI,4BAADzC,OAA8BwC,EAASoB,QAEpE0B,+BAAgClD,EAAME,SAGpC,CACAC,MAAQC,IAAQ,CACdC,IAAI,4BAADzC,OAA8BwC,EAAS+C,MAC1C7C,OAAQ,MACRC,KAAMH,EAASG,SAGnB6C,kCAAmCpD,EAAME,SAGvC,CACAC,MAAQC,IAAQ,CACdC,IAAI,4BAADzC,OAA8BwC,EAAS+C,MAC1C7C,OAAQ,aAGZ+C,SAAUrD,EAAMG,MAA2C,CACzDA,MAAOA,KAAA,CAASE,IAAI,aAEtBiD,UAAWtD,EAAME,SAAgD,CAC/DC,MAAQC,IAAQ,CACdC,IAAI,SACJC,OAAQ,OACRC,KAAMH,EAASG,SAGnBgD,aAAcvD,EAAMG,MAAmD,CACrEA,MAAQC,IAAQ,CAAQC,IAAI,UAADzC,OAAYwC,EAASoB,QAElDgC,aAAcxD,EAAME,SAAsD,CACxEC,MAAQC,IAAQ,CACdC,IAAI,UAADzC,OAAYwC,EAASoB,IACxBlB,OAAQ,MACRC,KAAMH,EAASG,SAGnBkD,gBAAiBzD,EAAME,SAGrB,CACAC,MAAQC,IAAQ,CAAQC,IAAI,UAADzC,OAAYwC,EAASoB,IAAMlB,OAAQ,aAEhEoD,WAAY1D,EAAMG,MAA+C,CAC/DA,MAAOA,KAAA,CAASE,IAAI,gBAEtBsD,cAAe3D,EAAMG,MAAqD,CACxEA,MAAOA,KAAA,CAASE,IAAI,qBAGxBuD,kBAAkB,KAwuBP,kCACXC,EAAiC,wCACjCC,EAAuC,2BACvCC,EAA0B,2BAC1BC,EAA0B,mBAC1BC,EAAkB,kBAClBC,EAAiB,sBACjBC,EAAqB,sBACrBC,EAAqB,yBACrBC,EAAwB,4BACxBC,EAA2B,oBAC3BC,EAAmB,uBACnBC,EAAsB,0BACtBC,EAAyB,sBACzBC,EAAqB,uBACrBC,EAAsB,2BACtBC,EAA0B,iCAC1BC,EAAgC,6BAChCC,EAA4B,yBAC5BC,EAAwB,iCACxBC,EAAgC,kCAChCC,EAAiC,kCACjCC,EAAiC,iCACjCC,EAAgC,kCAChCC,EAAiC,iCACjCC,EAAgC,yCAChCC,EAAwC,uCACxCC,EAAsC,iCACtCC,EAAgC,qCAChCC,EAAoC,qCACpCC,EAAoC,0CACpCC,EAAyC,6CACzCC,EAA4C,iBAC5CC,EAAgB,qBAChBC,EAAoB,qBACpBC,EAAoB,wBACpBC,GAAuB,2BACvBC,GAA0B,mBAC1BC,GAAkB,sBAClBC,IACEvG,E,mCCxiCJ,MA6GA,GA7GmBwG,KACjB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,KACpCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAiB,KAC1CG,GACL3B,IACI4B,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MA2CjB,OACE/I,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAAA1B,UACH+I,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAhJ,SAAA,EACHD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACW,QAAQ,OAAOK,eAAe,SAASF,WAAW,SAAS0I,GAAI,EAAEjJ,UACpED,EAAAA,EAAAA,KAACmJ,EAAAA,EAAI,OAGPH,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAAAnJ,SAAA,EACV+I,EAAAA,EAAAA,MAAA,QAAMK,SAjDOC,UACnBC,EAAEC,iBACFC,GAAAA,GAAMC,UA4BO,2BAATpB,GAAkD,UAAZG,GACxCG,GACEe,EAAAA,EAAAA,IAAe,CAAEC,SAAUtB,EAAOuB,MAAOpB,KAE3CgB,GAAAA,GAAMK,QAAQ,cACdhB,EAAS,sBAETW,GAAAA,GAAMM,MAAM,2BACd,EAWmC9J,SAAA,EAC3BD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CACFsK,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAG3I,MAAO,QACvCrB,UAEFD,EAAAA,EAAAA,KAACkK,EAAAA,EAAS,CACRC,UAAQ,EACR1G,GAAG,QACH2G,MAAM,SACNC,YAAY,SACZC,KAAK,QACLC,MAAOjC,EACPkC,SAAWC,GAAUlC,EAASkC,EAAMC,OAAOH,YAI/CvK,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CACFsK,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAG3I,MAAO,QACvCrB,UAEFD,EAAAA,EAAAA,KAACkK,EAAAA,EAAS,CACRC,UAAQ,EACR1G,GAAG,WACH2G,MAAM,QACNC,YAAY,QACZC,KAAK,WACLC,MAAO9B,EACP+B,SAAWC,GAAU/B,EAAY+B,EAAMC,OAAOH,YAIlDvK,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACsK,GAAI,CAAE,WAAY,CAAEC,EAAG,EAAG3I,MAAO,QAAUA,MAAO,OAAQrB,UAC7DD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACC,KAAK,QAAQhK,QAAQ,YAAY0J,KAAK,SAAQrK,SAAC,mBAM7DD,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACW,QAAQ,OAAOK,eAAe,SAASF,WAAW,SAAQP,UAC7D+I,EAAAA,EAAAA,MAAA,KAAA/I,SAAA,CAAG,4BACiBD,EAAAA,EAAAA,KAAA,KAAG6K,KAAK,IAAIC,QAAUL,IAAY3B,EAAS,aAAc2B,EAAMM,iBAAkB,EAAG9K,SAAC,iCAK1G,ECzFX,GAzBmB+K,KAEfhC,EAAAA,EAAAA,MAACrH,EAAAA,GAAI,CACHsJ,WAAS,EACTC,UAAU,SACVxK,eAAe,SACfF,WAAW,UACXwJ,GAAI,CAAEmB,OAAQ,QAASlL,SAAA,EAEvBD,EAAAA,EAAAA,KAACoL,EAAAA,EAAM,CAAAnL,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,cAETD,EAAAA,EAAAA,KAACqL,EAAAA,EAAgB,CAAApL,UACfD,EAAAA,EAAAA,KAACsL,EAAU,OAEbtC,EAAAA,EAAAA,MAAC9I,EAAAA,EAAS,CAACC,SAAS,KAAIF,SAAA,EACtBD,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAAA1B,UACHD,EAAAA,EAAAA,KAACqI,GAAU,OAEbrI,EAAAA,EAAAA,KAACD,EAAAA,EAAM,S,8GCbf,MAAMwL,GAAYC,EAAAA,EAAAA,IAAe,CAC/BC,QAASC,EAAAA,EAAOC,eAChBC,eAAgBA,CAACC,EAAOlM,KAAoB,IAAlB,SAAEmM,GAAUnM,EAEpC,MAAMkK,EAASiC,IAAyBC,KAAKlC,MAI7C,OAHIA,GACFgC,EAAQG,IAAI,gBAAgB,UAADnM,OAAYgK,IAElCgC,CAAO,EAEhBI,iBAAmBlJ,GACVmJ,IAAAA,UAAanJ,KAgBXoJ,GAAgBC,EAAAA,EAAAA,IAAU,CACrCC,YAAa,gBACbd,UAVEjC,MAAOgD,EAAMxK,EAAKyK,KACpB,IAAIC,QAAejB,EAAUe,EAAMxK,EAAKyK,GAIxC,OAHIC,EAAOzC,QACT0C,EAAAA,EAAAA,GAAyBD,EAAOzC,OAE3ByC,CAAM,EAMbxK,UAAWA,KAAA,CAAS,I","sources":["components/Footer/index.tsx","components/LogoSign/index.tsx","components/PageTitleWrapper/index.tsx","content/applications/user/SignIn/PageHeader.tsx","services/drHerancaApiStrapi.ts","content/applications/user/SignIn/SignInForm.tsx","content/applications/user/SignIn/index.tsx","services/emptyApi.ts"],"sourcesContent":["import { Box, Container, Link, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst FooterWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; 2025 - Dr. Herança - Sistema de Cálculo de Inventário\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n","import { Tooltip } from '@mui/material';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Tooltip title=\"Dr. Herança - Sistema de Cálculo de Inventário\" arrow\r\n    style={{\r\n      paddingTop: '20px',\r\n      paddingBottom: '20px',\r\n      paddingLeft: '10px',\r\n      paddingRight: '10px'\r\n    }}\r\n      >\r\n      <img\r\n        alt=\"Dr. Herança Logo\"\r\n        width={'80%'}\r\n        src=\"./static/images/logo/dr-heranca-logo.png\"\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Grid, Container } from '@mui/material';\r\n\r\nfunction PageHeader() {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Grid item xs={12}></Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { emptySplitApi as api } from './emptyApi';\r\nconst injectedRtkApi = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    postAiGenerateChapters: build.mutation<\r\n      PostAiGenerateChaptersApiResponse,\r\n      PostAiGenerateChaptersApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/ai/generate-chapters`,\r\n        method: 'POST',\r\n        body: queryArg.aiRequest\r\n      })\r\n    }),\r\n    postAiGenerateChapterContent: build.mutation<\r\n      PostAiGenerateChapterContentApiResponse,\r\n      PostAiGenerateChapterContentApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/ai/generate-chapter-content`,\r\n        method: 'POST',\r\n        body: queryArg.aiRequest\r\n      })\r\n    }),\r\n    postAiTranslate: build.mutation<\r\n      PostAiTranslateApiResponse,\r\n      PostAiTranslateApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/ai/translate`,\r\n        method: 'POST',\r\n        body: queryArg.aiRequest\r\n      })\r\n    }),\r\n    getAiGenerateImage: build.query<\r\n      GetAiGenerateImageApiResponse,\r\n      GetAiGenerateImageApiArg\r\n    >({\r\n      query: () => ({ url: `/ai/generate-image` })\r\n    }),\r\n    getAiImage: build.query<GetAiImageApiResponse, GetAiImageApiArg>({\r\n      query: () => ({ url: `/ai/image` })\r\n    }),\r\n    getEbooks: build.query<GetEbooksApiResponse, GetEbooksApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/ebooks`,\r\n        params: {\r\n          sort: queryArg.sort,\r\n          pagination: queryArg.pagination,\r\n          fields: queryArg.fields,\r\n          populate: queryArg.populate,\r\n          filters: queryArg.filters,\r\n          locale: queryArg.locale\r\n        }\r\n      })\r\n    }),\r\n    postEbooks: build.mutation<PostEbooksApiResponse, PostEbooksApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/ebooks`,\r\n        method: 'POST',\r\n        body: queryArg.ebookRequest\r\n      })\r\n    }),\r\n    getEbooksById: build.query<GetEbooksByIdApiResponse, GetEbooksByIdApiArg>({\r\n      query: (queryArg) => ({ url: `/ebooks/${queryArg.id}` })\r\n    }),\r\n    putEbooksById: build.mutation<\r\n      PutEbooksByIdApiResponse,\r\n      PutEbooksByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/ebooks/${queryArg.id}`,\r\n        method: 'PUT',\r\n        body: queryArg.ebookRequest\r\n      })\r\n    }),\r\n    deleteEbooksById: build.mutation<\r\n      DeleteEbooksByIdApiResponse,\r\n      DeleteEbooksByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/ebooks/${queryArg.id}`, method: 'DELETE' })\r\n    }),\r\n    getHomepage: build.query<GetHomepageApiResponse, GetHomepageApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/homepage`,\r\n        params: {\r\n          sort: queryArg.sort,\r\n          pagination: queryArg.pagination,\r\n          fields: queryArg.fields,\r\n          populate: queryArg.populate,\r\n          filters: queryArg.filters,\r\n          locale: queryArg.locale\r\n        }\r\n      })\r\n    }),\r\n    putHomepage: build.mutation<PutHomepageApiResponse, PutHomepageApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/homepage`,\r\n        method: 'PUT',\r\n        body: queryArg.homepageRequest\r\n      })\r\n    }),\r\n    deleteHomepage: build.mutation<\r\n      DeleteHomepageApiResponse,\r\n      DeleteHomepageApiArg\r\n    >({\r\n      query: () => ({ url: `/homepage`, method: 'DELETE' })\r\n    }),\r\n    postUpload: build.mutation<PostUploadApiResponse, PostUploadApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/upload`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getUploadFiles: build.query<\r\n      GetUploadFilesApiResponse,\r\n      GetUploadFilesApiArg\r\n    >({\r\n      query: () => ({ url: `/upload/files` })\r\n    }),\r\n    getUploadFilesById: build.query<\r\n      GetUploadFilesByIdApiResponse,\r\n      GetUploadFilesByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/upload/files/${queryArg.id}` })\r\n    }),\r\n    deleteUploadFilesById: build.mutation<\r\n      DeleteUploadFilesByIdApiResponse,\r\n      DeleteUploadFilesByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/upload/files/${queryArg.id}`,\r\n        method: 'DELETE'\r\n      })\r\n    }),\r\n    getConnectByProvider: build.query<\r\n      GetConnectByProviderApiResponse,\r\n      GetConnectByProviderApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/connect/${queryArg.provider}` })\r\n    }),\r\n    postAuthLocal: build.mutation<\r\n      PostAuthLocalApiResponse,\r\n      PostAuthLocalApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/local`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    postAuthLocalRegister: build.mutation<\r\n      PostAuthLocalRegisterApiResponse,\r\n      PostAuthLocalRegisterApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/local/register`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getAuthByProviderCallback: build.query<\r\n      GetAuthByProviderCallbackApiResponse,\r\n      GetAuthByProviderCallbackApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/auth/${queryArg.provider}/callback` })\r\n    }),\r\n    postAuthForgotPassword: build.mutation<\r\n      PostAuthForgotPasswordApiResponse,\r\n      PostAuthForgotPasswordApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/forgot-password`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    postAuthResetPassword: build.mutation<\r\n      PostAuthResetPasswordApiResponse,\r\n      PostAuthResetPasswordApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/reset-password`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    postAuthChangePassword: build.mutation<\r\n      PostAuthChangePasswordApiResponse,\r\n      PostAuthChangePasswordApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/change-password`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getAuthEmailConfirmation: build.query<\r\n      GetAuthEmailConfirmationApiResponse,\r\n      GetAuthEmailConfirmationApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/email-confirmation`,\r\n        params: { confirmation: queryArg.confirmation }\r\n      })\r\n    }),\r\n    postAuthSendEmailConfirmation: build.mutation<\r\n      PostAuthSendEmailConfirmationApiResponse,\r\n      PostAuthSendEmailConfirmationApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/auth/send-email-confirmation`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getUsersPermissionsPermissions: build.query<\r\n      GetUsersPermissionsPermissionsApiResponse,\r\n      GetUsersPermissionsPermissionsApiArg\r\n    >({\r\n      query: () => ({ url: `/users-permissions/permissions` })\r\n    }),\r\n    getUsersPermissionsRoles: build.query<\r\n      GetUsersPermissionsRolesApiResponse,\r\n      GetUsersPermissionsRolesApiArg\r\n    >({\r\n      query: () => ({ url: `/users-permissions/roles` })\r\n    }),\r\n    postUsersPermissionsRoles: build.mutation<\r\n      PostUsersPermissionsRolesApiResponse,\r\n      PostUsersPermissionsRolesApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/users-permissions/roles`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getUsersPermissionsRolesById: build.query<\r\n      GetUsersPermissionsRolesByIdApiResponse,\r\n      GetUsersPermissionsRolesByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/users-permissions/roles/${queryArg.id}` })\r\n    }),\r\n    putUsersPermissionsRolesByRole: build.mutation<\r\n      PutUsersPermissionsRolesByRoleApiResponse,\r\n      PutUsersPermissionsRolesByRoleApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/users-permissions/roles/${queryArg.role}`,\r\n        method: 'PUT',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    deleteUsersPermissionsRolesByRole: build.mutation<\r\n      DeleteUsersPermissionsRolesByRoleApiResponse,\r\n      DeleteUsersPermissionsRolesByRoleApiArg\r\n    >({\r\n      query: (queryArg) => ({\r\n        url: `/users-permissions/roles/${queryArg.role}`,\r\n        method: 'DELETE'\r\n      })\r\n    }),\r\n    getUsers: build.query<GetUsersApiResponse, GetUsersApiArg>({\r\n      query: () => ({ url: `/users` })\r\n    }),\r\n    postUsers: build.mutation<PostUsersApiResponse, PostUsersApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/users`,\r\n        method: 'POST',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    getUsersById: build.query<GetUsersByIdApiResponse, GetUsersByIdApiArg>({\r\n      query: (queryArg) => ({ url: `/users/${queryArg.id}` })\r\n    }),\r\n    putUsersById: build.mutation<PutUsersByIdApiResponse, PutUsersByIdApiArg>({\r\n      query: (queryArg) => ({\r\n        url: `/users/${queryArg.id}`,\r\n        method: 'PUT',\r\n        body: queryArg.body\r\n      })\r\n    }),\r\n    deleteUsersById: build.mutation<\r\n      DeleteUsersByIdApiResponse,\r\n      DeleteUsersByIdApiArg\r\n    >({\r\n      query: (queryArg) => ({ url: `/users/${queryArg.id}`, method: 'DELETE' })\r\n    }),\r\n    getUsersMe: build.query<GetUsersMeApiResponse, GetUsersMeApiArg>({\r\n      query: () => ({ url: `/users/me` })\r\n    }),\r\n    getUsersCount: build.query<GetUsersCountApiResponse, GetUsersCountApiArg>({\r\n      query: () => ({ url: `/users/count` })\r\n    })\r\n  }),\r\n  overrideExisting: false\r\n});\r\nexport { injectedRtkApi as drHerancaApi };\r\nexport type PostAiGenerateChaptersApiResponse = /** status 200 OK */ AiResponse;\r\nexport type PostAiGenerateChaptersApiArg = {\r\n  aiRequest: AiRequest;\r\n};\r\nexport type PostAiGenerateChapterContentApiResponse =\r\n  /** status 200 OK */ AiResponse;\r\nexport type PostAiGenerateChapterContentApiArg = {\r\n  aiRequest: AiRequest;\r\n};\r\nexport type PostAiTranslateApiResponse = /** status 200 OK */ AiResponse;\r\nexport type PostAiTranslateApiArg = {\r\n  aiRequest: AiRequest;\r\n};\r\nexport type GetAiGenerateImageApiResponse = /** status 200 OK */ AiResponse;\r\nexport type GetAiGenerateImageApiArg = void;\r\nexport type GetAiImageApiResponse = /** status 200 OK */ AiResponse;\r\nexport type GetAiImageApiArg = void;\r\nexport type GetEbooksApiResponse = /** status 200 OK */ EbookListResponse;\r\nexport type GetEbooksApiArg = {\r\n  /** Sort by attributes ascending (asc) or descending (desc) */\r\n  sort?: string;\r\n  pagination?: {\r\n    withCount?: boolean;\r\n    page?: number;\r\n    pageSize?: number;\r\n    start?: number;\r\n    limit?: number;\r\n  };\r\n  /** Fields to return (ex: title,author) */\r\n  fields?: string;\r\n  /** Relations to return */\r\n  populate?: string;\r\n  /** Filters to apply */\r\n  filters?: object;\r\n  /** Locale to apply */\r\n  locale?: string;\r\n};\r\nexport type PostEbooksApiResponse = /** status 200 OK */ EbookResponse;\r\nexport type PostEbooksApiArg = {\r\n  ebookRequest: EbookRequest;\r\n};\r\nexport type GetEbooksByIdApiResponse = /** status 200 OK */ EbookResponse;\r\nexport type GetEbooksByIdApiArg = {\r\n  id: number;\r\n};\r\nexport type PutEbooksByIdApiResponse = /** status 200 OK */ EbookResponse;\r\nexport type PutEbooksByIdApiArg = {\r\n  id: number;\r\n  ebookRequest: EbookRequest;\r\n};\r\nexport type DeleteEbooksByIdApiResponse = /** status 200 OK */ number;\r\nexport type DeleteEbooksByIdApiArg = {\r\n  id: number;\r\n};\r\nexport type GetHomepageApiResponse = /** status 200 OK */ HomepageResponse;\r\nexport type GetHomepageApiArg = {\r\n  /** Sort by attributes ascending (asc) or descending (desc) */\r\n  sort?: string;\r\n  pagination?: {\r\n    withCount?: boolean;\r\n    page?: number;\r\n    pageSize?: number;\r\n    start?: number;\r\n    limit?: number;\r\n  };\r\n  /** Fields to return (ex: title,author) */\r\n  fields?: string;\r\n  /** Relations to return */\r\n  populate?: string;\r\n  /** Filters to apply */\r\n  filters?: object;\r\n  /** Locale to apply */\r\n  locale?: string;\r\n};\r\nexport type PutHomepageApiResponse = /** status 200 OK */ HomepageResponse;\r\nexport type PutHomepageApiArg = {\r\n  homepageRequest: HomepageRequest;\r\n};\r\nexport type DeleteHomepageApiResponse = /** status 200 OK */ number;\r\nexport type DeleteHomepageApiArg = void;\r\nexport type PostUploadApiResponse = /** status 200 response */ UploadFile[];\r\nexport type PostUploadApiArg = {\r\n  /** Upload files */\r\n  body: {\r\n    /** The folder where the file(s) will be uploaded to (only supported on strapi-provider-upload-aws-s3). */\r\n    path?: string;\r\n    /** The ID of the entry which the file(s) will be linked to */\r\n    refId?: string;\r\n    /** The unique ID (uid) of the model which the file(s) will be linked to (api::restaurant.restaurant). */\r\n    ref?: string;\r\n    /** The field of the entry which the file(s) will be precisely linked to. */\r\n    field?: string;\r\n    files: Blob[];\r\n  };\r\n};\r\nexport type GetUploadFilesApiResponse =\r\n  /** status 200 Get a list of files */ UploadFile[];\r\nexport type GetUploadFilesApiArg = void;\r\nexport type GetUploadFilesByIdApiResponse =\r\n  /** status 200 Get a specific file */ UploadFile;\r\nexport type GetUploadFilesByIdApiArg = {\r\n  id: string;\r\n};\r\nexport type DeleteUploadFilesByIdApiResponse =\r\n  /** status 200 Delete a file */ UploadFile;\r\nexport type DeleteUploadFilesByIdApiArg = {\r\n  id: string;\r\n};\r\nexport type GetConnectByProviderApiResponse = unknown;\r\nexport type GetConnectByProviderApiArg = {\r\n  /** Provider name */\r\n  provider: string;\r\n};\r\nexport type PostAuthLocalApiResponse =\r\n  /** status 200 Connection */ UsersPermissionsUserRegistration;\r\nexport type PostAuthLocalApiArg = {\r\n  body: {\r\n    identifier?: string;\r\n    password?: string;\r\n  };\r\n};\r\nexport type PostAuthLocalRegisterApiResponse =\r\n  /** status 200 Successful registration */ UsersPermissionsUserRegistration;\r\nexport type PostAuthLocalRegisterApiArg = {\r\n  body: {\r\n    username?: string;\r\n    email?: string;\r\n    password?: string;\r\n  };\r\n};\r\nexport type GetAuthByProviderCallbackApiResponse =\r\n  /** status 200 Returns a jwt token and user info */ UsersPermissionsUserRegistration;\r\nexport type GetAuthByProviderCallbackApiArg = {\r\n  /** Provider name */\r\n  provider: string;\r\n};\r\nexport type PostAuthForgotPasswordApiResponse = /** status 200 Returns ok */ {\r\n  ok?: true;\r\n};\r\nexport type PostAuthForgotPasswordApiArg = {\r\n  body: {\r\n    email?: string;\r\n  };\r\n};\r\nexport type PostAuthResetPasswordApiResponse =\r\n  /** status 200 Returns a jwt token and user info */ UsersPermissionsUserRegistration;\r\nexport type PostAuthResetPasswordApiArg = {\r\n  body: {\r\n    password?: string;\r\n    passwordConfirmation?: string;\r\n    code?: string;\r\n  };\r\n};\r\nexport type PostAuthChangePasswordApiResponse =\r\n  /** status 200 Returns a jwt token and user info */ UsersPermissionsUserRegistration;\r\nexport type PostAuthChangePasswordApiArg = {\r\n  body: {\r\n    password: string;\r\n    currentPassword: string;\r\n    passwordConfirmation: string;\r\n  };\r\n};\r\nexport type GetAuthEmailConfirmationApiResponse = unknown;\r\nexport type GetAuthEmailConfirmationApiArg = {\r\n  /** confirmation token received by email */\r\n  confirmation?: string;\r\n};\r\nexport type PostAuthSendEmailConfirmationApiResponse =\r\n  /** status 200 Returns email and boolean to confirm email was sent */ {\r\n    email?: string;\r\n    sent?: true;\r\n  };\r\nexport type PostAuthSendEmailConfirmationApiArg = {\r\n  body: {\r\n    email?: string;\r\n  };\r\n};\r\nexport type GetUsersPermissionsPermissionsApiResponse =\r\n  /** status 200 Returns the permissions tree */ {\r\n    permissions?: UsersPermissionsPermissionsTree;\r\n  };\r\nexport type GetUsersPermissionsPermissionsApiArg = void;\r\nexport type GetUsersPermissionsRolesApiResponse =\r\n  /** status 200 Returns list of roles */ {\r\n    roles?: (UsersPermissionsRole & {\r\n      nb_users?: number;\r\n    })[];\r\n  };\r\nexport type GetUsersPermissionsRolesApiArg = void;\r\nexport type PostUsersPermissionsRolesApiResponse =\r\n  /** status 200 Returns ok if the role was create */ {\r\n    ok?: true;\r\n  };\r\nexport type PostUsersPermissionsRolesApiArg = {\r\n  body: {\r\n    name?: string;\r\n    description?: string;\r\n    type?: string;\r\n    permissions?: UsersPermissionsPermissionsTree;\r\n  };\r\n};\r\nexport type GetUsersPermissionsRolesByIdApiResponse =\r\n  /** status 200 Returns the role */ {\r\n    role?: UsersPermissionsRole;\r\n  };\r\nexport type GetUsersPermissionsRolesByIdApiArg = {\r\n  /** role Id */\r\n  id: string;\r\n};\r\nexport type PutUsersPermissionsRolesByRoleApiResponse =\r\n  /** status 200 Returns ok if the role was udpated */ {\r\n    ok?: true;\r\n  };\r\nexport type PutUsersPermissionsRolesByRoleApiArg = {\r\n  /** role Id */\r\n  role: string;\r\n  body: {\r\n    name?: string;\r\n    description?: string;\r\n    type?: string;\r\n    permissions?: UsersPermissionsPermissionsTree;\r\n  };\r\n};\r\nexport type DeleteUsersPermissionsRolesByRoleApiResponse =\r\n  /** status 200 Returns ok if the role was delete */ {\r\n    ok?: true;\r\n  };\r\nexport type DeleteUsersPermissionsRolesByRoleApiArg = {\r\n  /** role Id */\r\n  role: string;\r\n};\r\nexport type GetUsersApiResponse =\r\n  /** status 200 Returns an array of users */ UsersPermissionsUser[];\r\nexport type GetUsersApiArg = void;\r\nexport type PostUsersApiResponse =\r\n  /** status 201 Returns created user info */ UsersPermissionsUser & {\r\n    role?: UsersPermissionsRole;\r\n  };\r\nexport type PostUsersApiArg = {\r\n  body: {\r\n    email: string;\r\n    username: string;\r\n    password: string;\r\n  };\r\n};\r\nexport type GetUsersByIdApiResponse =\r\n  /** status 200 Returns a user */ UsersPermissionsUser;\r\nexport type GetUsersByIdApiArg = {\r\n  /** user Id */\r\n  id: string;\r\n};\r\nexport type PutUsersByIdApiResponse =\r\n  /** status 200 Returns updated user info */ UsersPermissionsUser & {\r\n    role?: UsersPermissionsRole;\r\n  };\r\nexport type PutUsersByIdApiArg = {\r\n  /** user Id */\r\n  id: string;\r\n  body: {\r\n    email: string;\r\n    username: string;\r\n    password: string;\r\n  };\r\n};\r\nexport type DeleteUsersByIdApiResponse =\r\n  /** status 200 Returns deleted user info */ UsersPermissionsUser;\r\nexport type DeleteUsersByIdApiArg = {\r\n  /** user Id */\r\n  id: string;\r\n};\r\nexport type GetUsersMeApiResponse =\r\n  /** status 200 Returns user info */ UsersPermissionsUser;\r\nexport type GetUsersMeApiArg = void;\r\nexport type GetUsersCountApiResponse =\r\n  /** status 200 Returns a number */ number;\r\nexport type GetUsersCountApiArg = void;\r\nexport type Ai = {\r\n  ebook_style?: string;\r\n  category?: string;\r\n  title?: string;\r\n  subtitle?: string;\r\n  author?: string;\r\n  info?: string;\r\n  description?: string;\r\n  illustration_style?: string;\r\n  section_numbers?: number;\r\n  paragraph_numbers?: number;\r\n  sections?: any;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  createdBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {\r\n        firstname?: string;\r\n        lastname?: string;\r\n        username?: string;\r\n        email?: string;\r\n        resetPasswordToken?: string;\r\n        registrationToken?: string;\r\n        isActive?: boolean;\r\n        roles?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {\r\n              name?: string;\r\n              code?: string;\r\n              description?: string;\r\n              users?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                }[];\r\n              };\r\n              permissions?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {\r\n                    action?: string;\r\n                    actionParameters?: any;\r\n                    subject?: string;\r\n                    properties?: any;\r\n                    conditions?: any;\r\n                    role?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    createdAt?: string;\r\n                    updatedAt?: string;\r\n                    createdBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    updatedBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                  };\r\n                }[];\r\n              };\r\n              createdAt?: string;\r\n              updatedAt?: string;\r\n              createdBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n              updatedBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n            };\r\n          }[];\r\n        };\r\n        blocked?: boolean;\r\n        preferedLanguage?: string;\r\n        createdAt?: string;\r\n        updatedAt?: string;\r\n        createdBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n        updatedBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n      };\r\n    };\r\n  };\r\n  updatedBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {};\r\n    };\r\n  };\r\n};\r\nexport type AiResponseDataObject = {\r\n  id?: number;\r\n  attributes?: Ai;\r\n};\r\nexport type AiResponse = {\r\n  data?: AiResponseDataObject;\r\n  meta?: object;\r\n};\r\nexport type Error = {\r\n  data?: ((object | null) | (object[] | null)) | null;\r\n  error: {\r\n    status?: number;\r\n    name?: string;\r\n    message?: string;\r\n    details?: object;\r\n  };\r\n};\r\nexport type AiRequest = {\r\n  data: {\r\n    ebook_style?: string;\r\n    category?: string;\r\n    title?: string;\r\n    subtitle?: string;\r\n    author?: string;\r\n    info?: string;\r\n    description?: string;\r\n    illustration_style?: string;\r\n    section_numbers?: number;\r\n    paragraph_numbers?: number;\r\n    sections?: any;\r\n  };\r\n};\r\nexport type Ebook = {\r\n  ebook_style?: string;\r\n  category?: string;\r\n  title?: string;\r\n  subtitle?: string;\r\n  author?: string;\r\n  info?: string;\r\n  description?: string;\r\n  illustration_style?: string;\r\n  section_numbers?: number;\r\n  sections?: any;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  createdBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {\r\n        firstname?: string;\r\n        lastname?: string;\r\n        username?: string;\r\n        email?: string;\r\n        resetPasswordToken?: string;\r\n        registrationToken?: string;\r\n        isActive?: boolean;\r\n        roles?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {\r\n              name?: string;\r\n              code?: string;\r\n              description?: string;\r\n              users?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                }[];\r\n              };\r\n              permissions?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {\r\n                    action?: string;\r\n                    actionParameters?: any;\r\n                    subject?: string;\r\n                    properties?: any;\r\n                    conditions?: any;\r\n                    role?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    createdAt?: string;\r\n                    updatedAt?: string;\r\n                    createdBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    updatedBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                  };\r\n                }[];\r\n              };\r\n              createdAt?: string;\r\n              updatedAt?: string;\r\n              createdBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n              updatedBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n            };\r\n          }[];\r\n        };\r\n        blocked?: boolean;\r\n        preferedLanguage?: string;\r\n        createdAt?: string;\r\n        updatedAt?: string;\r\n        createdBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n        updatedBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n      };\r\n    };\r\n  };\r\n  updatedBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {};\r\n    };\r\n  };\r\n};\r\nexport type EbookListResponseDataItem = {\r\n  id?: number;\r\n  attributes?: Ebook;\r\n};\r\nexport type EbookListResponse = {\r\n  data?: EbookListResponseDataItem[];\r\n  meta?: {\r\n    pagination?: {\r\n      page?: number;\r\n      pageSize?: number;\r\n      pageCount?: number;\r\n      total?: number;\r\n    };\r\n  };\r\n};\r\nexport type EbookResponseDataObject = {\r\n  id?: number;\r\n  attributes?: Ebook;\r\n};\r\nexport type EbookResponse = {\r\n  data?: EbookResponseDataObject;\r\n  meta?: object;\r\n};\r\nexport type EbookRequest = {\r\n  data: {\r\n    ebook_style?: string;\r\n    category?: string;\r\n    title?: string;\r\n    subtitle?: string;\r\n    author?: string;\r\n    info?: string;\r\n    description?: string;\r\n    illustration_style?: string;\r\n    section_numbers?: number;\r\n    sections?: any;\r\n  };\r\n};\r\nexport type Homepage = {\r\n  Test?: any;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  publishedAt?: string;\r\n  createdBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {\r\n        firstname?: string;\r\n        lastname?: string;\r\n        username?: string;\r\n        email?: string;\r\n        resetPasswordToken?: string;\r\n        registrationToken?: string;\r\n        isActive?: boolean;\r\n        roles?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {\r\n              name?: string;\r\n              code?: string;\r\n              description?: string;\r\n              users?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                }[];\r\n              };\r\n              permissions?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {\r\n                    action?: string;\r\n                    actionParameters?: any;\r\n                    subject?: string;\r\n                    properties?: any;\r\n                    conditions?: any;\r\n                    role?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    createdAt?: string;\r\n                    updatedAt?: string;\r\n                    createdBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                    updatedBy?: {\r\n                      data?: {\r\n                        id?: number;\r\n                        attributes?: {};\r\n                      };\r\n                    };\r\n                  };\r\n                }[];\r\n              };\r\n              createdAt?: string;\r\n              updatedAt?: string;\r\n              createdBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n              updatedBy?: {\r\n                data?: {\r\n                  id?: number;\r\n                  attributes?: {};\r\n                };\r\n              };\r\n            };\r\n          }[];\r\n        };\r\n        blocked?: boolean;\r\n        preferedLanguage?: string;\r\n        createdAt?: string;\r\n        updatedAt?: string;\r\n        createdBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n        updatedBy?: {\r\n          data?: {\r\n            id?: number;\r\n            attributes?: {};\r\n          };\r\n        };\r\n      };\r\n    };\r\n  };\r\n  updatedBy?: {\r\n    data?: {\r\n      id?: number;\r\n      attributes?: {};\r\n    };\r\n  };\r\n};\r\nexport type HomepageResponseDataObject = {\r\n  id?: number;\r\n  attributes?: Homepage;\r\n};\r\nexport type HomepageResponse = {\r\n  data?: HomepageResponseDataObject;\r\n  meta?: object;\r\n};\r\nexport type HomepageRequest = {\r\n  data: {\r\n    Test?: any;\r\n  };\r\n};\r\nexport type UploadFile = {\r\n  id?: number;\r\n  name?: string;\r\n  alternativeText?: string;\r\n  caption?: string;\r\n  width?: number;\r\n  height?: number;\r\n  formats?: number;\r\n  hash?: string;\r\n  ext?: string;\r\n  mime?: string;\r\n  size?: number;\r\n  url?: string;\r\n  previewUrl?: string;\r\n  provider?: string;\r\n  provider_metadata?: object;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n};\r\nexport type UsersPermissionsUser = {\r\n  id?: number;\r\n  username?: string;\r\n  email?: string;\r\n  provider?: string;\r\n  confirmed?: boolean;\r\n  blocked?: boolean;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n};\r\nexport type UsersPermissionsUserRegistration = {\r\n  jwt?: string;\r\n  user?: UsersPermissionsUser;\r\n};\r\nexport type UsersPermissionsPermissionsTree = {\r\n  [key: string]: {\r\n    /** every controller of the api */\r\n    controllers?: {\r\n      [key: string]: {\r\n        [key: string]: {\r\n          enabled?: boolean;\r\n          policy?: string;\r\n        };\r\n      };\r\n    };\r\n  };\r\n};\r\nexport type UsersPermissionsRole = {\r\n  id?: number;\r\n  name?: string;\r\n  description?: string;\r\n  type?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n};\r\nexport const {\r\n  usePostAiGenerateChaptersMutation,\r\n  usePostAiGenerateChapterContentMutation,\r\n  usePostAiTranslateMutation,\r\n  useGetAiGenerateImageQuery,\r\n  useGetAiImageQuery,\r\n  useGetEbooksQuery,\r\n  usePostEbooksMutation,\r\n  useGetEbooksByIdQuery,\r\n  usePutEbooksByIdMutation,\r\n  useDeleteEbooksByIdMutation,\r\n  useGetHomepageQuery,\r\n  usePutHomepageMutation,\r\n  useDeleteHomepageMutation,\r\n  usePostUploadMutation,\r\n  useGetUploadFilesQuery,\r\n  useGetUploadFilesByIdQuery,\r\n  useDeleteUploadFilesByIdMutation,\r\n  useGetConnectByProviderQuery,\r\n  usePostAuthLocalMutation,\r\n  usePostAuthLocalRegisterMutation,\r\n  useGetAuthByProviderCallbackQuery,\r\n  usePostAuthForgotPasswordMutation,\r\n  usePostAuthResetPasswordMutation,\r\n  usePostAuthChangePasswordMutation,\r\n  useGetAuthEmailConfirmationQuery,\r\n  usePostAuthSendEmailConfirmationMutation,\r\n  useGetUsersPermissionsPermissionsQuery,\r\n  useGetUsersPermissionsRolesQuery,\r\n  usePostUsersPermissionsRolesMutation,\r\n  useGetUsersPermissionsRolesByIdQuery,\r\n  usePutUsersPermissionsRolesByRoleMutation,\r\n  useDeleteUsersPermissionsRolesByRoleMutation,\r\n  useGetUsersQuery,\r\n  usePostUsersMutation,\r\n  useGetUsersByIdQuery,\r\n  usePutUsersByIdMutation,\r\n  useDeleteUsersByIdMutation,\r\n  useGetUsersMeQuery,\r\n  useGetUsersCountQuery\r\n} = injectedRtkApi;\r\n","// eslint-disable-next-line no-restricted-globals\r\nimport TextField from '@mui/material/TextField';\r\nimport { Box, Card, CardContent, Grid, Button } from '@mui/material';\r\nimport Logo from '../../../../../src/components/LogoSign';\r\nimport { setCredentials } from '../../../../features/auth/authSlice';\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n  PostAuthLocalApiArg,\r\n  usePostAuthLocalMutation\r\n} from 'src/services/drHerancaApiStrapi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SignInForm = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [loginAccessTokenMutation] =\r\n    usePostAuthLocalMutation();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    toast.dismiss();\r\n    \r\n    // const postAuthLocalApiArg: PostAuthLocalApiArg = {\r\n    //   body: {\r\n    //     identifier: email,\r\n    //     password: password\r\n    //   }\r\n    // };\r\n    // try {\r\n    //   const credentials = await toast.promise(\r\n    //     loginAccessTokenMutation(postAuthLocalApiArg).unwrap(),\r\n    //     {\r\n    //       pending: 'Aguarde...',\r\n    //       success: 'Bem vindo(a)!',\r\n    //       error:\r\n    //         'Não foi possível realizar o login. Verifique suas credenciais.'\r\n    //     }\r\n    //   );\r\n\r\n    //   dispatch(\r\n    //     setCredentials({ username: email, token: credentials.jwt })\r\n    //   );\r\n    //   navigate('/ebook');\r\n    // } catch (error) {\r\n      //   console.error(error);\r\n      // }\r\n      \r\n    // MOCK\r\n    if (email == 'melquisedeque@email.com' && password == '123456') {\r\n      dispatch(\r\n        setCredentials({ username: email, token: password })\r\n      );\r\n      toast.success('Bem vindo!');\r\n      navigate('/inventories/list');\r\n    } else {\r\n      toast.error('Credenciais inválidas');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Card>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={2}>\r\n          <Logo />\r\n        </Box>\r\n\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                '& .MuiTextField-root': { m: 1, width: '98%' }\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                label=\"E-mail\"\r\n                placeholder=\"E-mail\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                '& .MuiTextField-root': { m: 1, width: '98%' }\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"password\"\r\n                label=\"Senha\"\r\n                placeholder=\"Senha\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Box>\r\n\r\n            <Box sx={{ '& button': { m: 1, width: '100%' }, width: '98%' }}>\r\n              <div>\r\n                <Button size=\"large\" variant=\"contained\" type=\"submit\">\r\n                  Entrar\r\n                </Button>\r\n              </div>\r\n            </Box>\r\n          </form>\r\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <p>\r\n              Não é cadastrado? <a href=\"#\" onClick={(event) => {{navigate('/register'); event.stopPropagation();}}}>Cadastre-se aqui</a>\r\n            </p>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from '../../../../components/PageTitleWrapper';\r\nimport { Grid, Container } from '@mui/material';\r\nimport Footer from '../../../../components/Footer';\r\nimport SignInForm from './SignInForm';\r\n\r\nconst UserSignIn = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"stretch\"\r\n      sx={{ height: '100%' }}\r\n    >\r\n      <Helmet>\r\n        <title>Entrar</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"sm\">\r\n        <Grid>\r\n          <SignInForm />\r\n        </Grid>\r\n        <Footer />\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserSignIn;\r\n","import {\r\n  createApi,\r\n  BaseQueryFn,\r\n  FetchArgs,\r\n  fetchBaseQuery,\r\n  FetchBaseQueryError\r\n} from '@reduxjs/toolkit/query/react';\r\nimport { checkIfStatusIsForbidden } from 'src/features/auth/authRedirect';\r\nimport { config } from '../config';\r\nimport { RootState } from '../store';\r\n// var qs = require('qs');\r\nimport qs from 'qs';\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: config.DR_HERANCA_API,\r\n  prepareHeaders: (headers, { getState }) => {\r\n    // By default, if we have a token in the store, let's use that for authenticated requests\r\n    const token = (getState() as RootState).auth.token;\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`);\r\n    }\r\n    return headers;\r\n  },\r\n  paramsSerializer: (params) => {\r\n    return qs.stringify(params);\r\n  }\r\n});\r\n\r\nconst baseQueryWithAuthCheck: BaseQueryFn<\r\n  string | FetchArgs,\r\n  unknown,\r\n  FetchBaseQueryError\r\n> = async (args, api, extraOptions) => {\r\n  let result = await baseQuery(args, api, extraOptions);\r\n  if (result.error) {\r\n    checkIfStatusIsForbidden(result.error);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const emptySplitApi = createApi({\r\n  reducerPath: 'emptySplitApi',\r\n  baseQuery: baseQueryWithAuthCheck,\r\n  endpoints: () => ({})\r\n});\r\n"],"names":["FooterWrapper","styled","Box","_ref","theme","concat","spacing","Footer","_jsx","children","Container","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","Typography","variant","Tooltip","title","arrow","style","paddingTop","paddingBottom","paddingLeft","paddingRight","alt","width","src","PageTitle","_ref2","_Fragment","Grid","item","injectedRtkApi","api","injectEndpoints","endpoints","build","postAiGenerateChapters","mutation","query","queryArg","url","method","body","aiRequest","postAiGenerateChapterContent","postAiTranslate","getAiGenerateImage","getAiImage","getEbooks","params","sort","pagination","fields","populate","filters","locale","postEbooks","ebookRequest","getEbooksById","id","putEbooksById","deleteEbooksById","getHomepage","putHomepage","homepageRequest","deleteHomepage","postUpload","getUploadFiles","getUploadFilesById","deleteUploadFilesById","getConnectByProvider","provider","postAuthLocal","postAuthLocalRegister","getAuthByProviderCallback","postAuthForgotPassword","postAuthResetPassword","postAuthChangePassword","getAuthEmailConfirmation","confirmation","postAuthSendEmailConfirmation","getUsersPermissionsPermissions","getUsersPermissionsRoles","postUsersPermissionsRoles","getUsersPermissionsRolesById","putUsersPermissionsRolesByRole","role","deleteUsersPermissionsRolesByRole","getUsers","postUsers","getUsersById","putUsersById","deleteUsersById","getUsersMe","getUsersCount","overrideExisting","usePostAiGenerateChaptersMutation","usePostAiGenerateChapterContentMutation","usePostAiTranslateMutation","useGetAiGenerateImageQuery","useGetAiImageQuery","useGetEbooksQuery","usePostEbooksMutation","useGetEbooksByIdQuery","usePutEbooksByIdMutation","useDeleteEbooksByIdMutation","useGetHomepageQuery","usePutHomepageMutation","useDeleteHomepageMutation","usePostUploadMutation","useGetUploadFilesQuery","useGetUploadFilesByIdQuery","useDeleteUploadFilesByIdMutation","useGetConnectByProviderQuery","usePostAuthLocalMutation","usePostAuthLocalRegisterMutation","useGetAuthByProviderCallbackQuery","usePostAuthForgotPasswordMutation","usePostAuthResetPasswordMutation","usePostAuthChangePasswordMutation","useGetAuthEmailConfirmationQuery","usePostAuthSendEmailConfirmationMutation","useGetUsersPermissionsPermissionsQuery","useGetUsersPermissionsRolesQuery","usePostUsersPermissionsRolesMutation","useGetUsersPermissionsRolesByIdQuery","usePutUsersPermissionsRolesByRoleMutation","useDeleteUsersPermissionsRolesByRoleMutation","useGetUsersQuery","usePostUsersMutation","useGetUsersByIdQuery","usePutUsersByIdMutation","useDeleteUsersByIdMutation","useGetUsersMeQuery","useGetUsersCountQuery","SignInForm","email","setEmail","useState","password","setPassword","loginAccessTokenMutation","dispatch","useDispatch","navigate","useNavigate","_jsxs","Card","mt","Logo","CardContent","onSubmit","async","e","preventDefault","toast","dismiss","setCredentials","username","token","success","error","sx","m","TextField","required","label","placeholder","type","value","onChange","event","target","Button","size","href","onClick","stopPropagation","UserSignIn","container","direction","height","Helmet","PageTitleWrapper","PageHeader","baseQuery","fetchBaseQuery","baseUrl","config","DR_HERANCA_API","prepareHeaders","headers","getState","auth","set","paramsSerializer","qs","emptySplitApi","createApi","reducerPath","args","extraOptions","result","checkIfStatusIsForbidden"],"sourceRoot":""}