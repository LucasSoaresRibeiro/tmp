{"version":3,"file":"static/js/252.138c0e81.chunk.js","mappings":"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","sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","components/Text/index.tsx","content/applications/inventory/Home/CardItemAdd.tsx","content/applications/inventory/Home/CardItem.tsx","content/applications/inventory/Home/Content.tsx","content/applications/inventory/Home/index.tsx","services/utils.ts"],"sourcesContent":["import { Box, Container, Link, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst FooterWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; 2025 - Dr. Herança - Sistema de Cálculo de Inventário\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface TextProps {\r\n  className?: string;\r\n  color?:\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'error'\r\n  | 'warning'\r\n  | 'success'\r\n  | 'info'\r\n  | 'black';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst TextWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      \r\n      &.MuiText {\r\n\r\n        &-black {\r\n          color: ${theme.palette.common.black}\r\n        }\r\n\r\n        &-primary {\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Text: FC<TextProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <TextWrapper className={'MuiText-' + color} {...rest}>\r\n      {children}\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nText.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info',\r\n    'black'\r\n  ])\r\n};\r\n\r\nexport default Text;\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    CardActionArea,\r\n    Avatar,\r\n    Tooltip,\r\n    styled\r\n} from '@mui/material';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nconst AvatarAddWrapper = styled(Avatar)(\r\n    ({ theme }) => `\r\n        background: ${theme.colors.alpha.black[5]};\r\n        color: ${theme.colors.primary.main};\r\n        width: ${theme.spacing(8)};\r\n        height: ${theme.spacing(8)};\r\n`\r\n);\r\n\r\nconst CardAddAction = styled(Card)(\r\n    ({ theme }) => `\r\n        border: ${theme.colors.primary.main} dashed 1px;\r\n        height: 100%;\r\n        color: ${theme.colors.primary.main};\r\n        box-shadow: none;\r\n            \r\n        .MuiCardActionArea-root {\r\n            height: 100%;\r\n            justify-content: center;\r\n            align-items: center;\r\n            display: flex;\r\n        }\r\n            \r\n        .MuiTouchRipple-root {\r\n            opacity: .2;\r\n        }\r\n            \r\n        &:hover {\r\n            border-color: ${theme.colors.alpha.black[100]};\r\n        }\r\n    `\r\n);\r\n\r\nexport default function CardItemAdd(props) {\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <Tooltip arrow title=\"Adicionar\">\r\n                <CardAddAction>\r\n                    <CardActionArea sx={{ px: 1 }}>\r\n                        <CardContent>\r\n                            <AvatarAddWrapper>\r\n                                <AddTwoToneIcon fontSize=\"large\" />\r\n                            </AvatarAddWrapper>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </CardAddAction>\r\n            </Tooltip>\r\n        </Grid>\r\n    );\r\n}","import {\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    Radio,\r\n    FormControlLabel,\r\n    IconButton,\r\n    Tooltip,\r\n    Box,\r\n    lighten,\r\n    styled,\r\n    Divider\r\n} from '@mui/material';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\n  \r\nconst CardLogo = styled('img')(\r\n    ({ theme }) => `\r\n        border: 1px solid ${theme.colors.alpha.black[30]};\r\n        border-radius: ${theme.general.borderRadius};\r\n        padding: ${theme.spacing(1)};\r\n        margin-right: ${theme.spacing(2)};\r\n        background: ${theme.colors.alpha.white[100]};\r\n    `\r\n);\r\n  \r\nconst IconButtonEdit = styled(IconButton)(\r\n    ({ theme }) => `\r\n        background: ${theme.colors.secondary.lighter};\r\n        color: ${theme.colors.secondary.main};\r\n        padding: ${theme.spacing(0.5)};\r\n\r\n        &:hover {\r\n        background: ${lighten(theme.colors.secondary.lighter, 0.4)};\r\n        }\r\n    `\r\n);\r\n  \r\nconst IconButtonError = styled(IconButton)(\r\n    ({ theme }) => `\r\n        background: ${theme.colors.error.lighter};\r\n        color: ${theme.colors.error.main};\r\n        padding: ${theme.spacing(0.5)};\r\n\r\n        &:hover {\r\n        background: ${lighten(theme.colors.error.lighter, 0.4)};\r\n        }\r\n    `\r\n);\r\n  \r\nconst CardCc = styled(Card)(\r\n    ({ theme }) => `\r\n        border: 1px solid ${theme.colors.alpha.black[30]};\r\n        background: ${theme.colors.alpha.black[5]};\r\n        box-shadow: none;\r\n    `\r\n);\r\n  \r\nexport default function CardItem(props) {\r\n    return (\r\n        <Grid item xs={12} sm={3}>\r\n            <CardCc sx={{ px: 2, pt: 2, pb: 1 }}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n                {/* <CardLogo\r\n                    src=\"/static/images/placeholders/logo/mastercard.png\"\r\n                    alt=\"Visa\"\r\n                /> */}\r\n                <Box>\r\n                    <Typography variant=\"h3\" fontWeight=\"normal\">\r\n                        {props.data.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {props.data.subtitle}\r\n                    </Typography>\r\n                    <Divider/>\r\n                    { props.data.labels.map(function (label, idx) {\r\n                        return (\r\n                            <>\r\n                                <Typography pt={1} color=\"text.secondary\" variant=\"body2\">\r\n                                    {label}\r\n                                </Typography> \r\n                            </>\r\n                        )\r\n                    })}\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n                pt={2}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"end\"\r\n            >\r\n                <Tooltip arrow title=\"Editar\">\r\n                    <IconButtonEdit sx={{ ml: 1 }}>\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                    </IconButtonEdit>\r\n                </Tooltip>\r\n                <Tooltip arrow title=\"Deletar\">\r\n                    <IconButtonError sx={{ ml: 1 }}>\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                    </IconButtonError>\r\n                </Tooltip>\r\n            </Box>\r\n            </CardCc>\r\n        </Grid>\r\n    );\r\n}","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  Tooltip,\r\n  IconButton,\r\n  lighten,\r\n  styled\r\n} from '@mui/material';\r\nimport { Inventory } from 'src/types';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\n\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport FamilyRestroomIcon from '@mui/icons-material/FamilyRestroom';\r\nimport HomeWorkIcon from '@mui/icons-material/HomeWork';\r\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\r\nimport SavingsIcon from '@mui/icons-material/Savings';\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport AutoAwesomeMotionIcon from '@mui/icons-material/AutoAwesomeMotion';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport PublicIcon from '@mui/icons-material/Public';\r\nimport AssessmentIcon from '@mui/icons-material/Assessment';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\n\r\nimport Text from 'src/components/Text';\r\nimport { formatDate } from 'src/services/utils';\r\n\r\nimport CardItemAdd from './CardItemAdd';\r\nimport CardItem from './CardItem';\r\n\r\nconst AvatarPrimary = styled(Avatar)(\r\n  ({ theme }) => `\r\n      background: ${theme.colors.primary.lighter};\r\n      color: ${theme.colors.primary.main};\r\n      width: ${theme.spacing(6)};\r\n      height: ${theme.spacing(6)};\r\n`\r\n);\r\n\r\nconst IconButtonEdit = styled(IconButton)(\r\n  ({ theme }) => `\r\n      background: ${theme.colors.secondary.lighter};\r\n      color: ${theme.colors.secondary.main};\r\n      padding: ${theme.spacing(0.5)};\r\n\r\n      &:hover {\r\n      background: ${lighten(theme.colors.secondary.lighter, 0.4)};\r\n      }\r\n  `\r\n);\r\n\r\nexport default function Content(props) {\r\n\r\n  let inventory: Inventory = JSON.parse(JSON.stringify(props.data))\r\n  if (inventory == null) {\r\n    return (\r\n      <>\r\n        <h4>Carregando...</h4>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n\r\n      {/* ----------------- CLIENTE -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <AvatarPrimary>\r\n              <PersonIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2} width={\"100%\"}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Cliente\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Dados do solicitante do cálculo de inventário\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip arrow title=\"Editar\">\r\n                <IconButtonEdit sx={{ ml: 1 }}>\r\n                    <EditTwoToneIcon fontSize=\"small\" />\r\n                </IconButtonEdit>\r\n            </Tooltip>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 4 }}>\r\n            <Typography variant=\"subtitle2\">\r\n              <Grid container spacing={1}>\r\n\r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Cliente / Solicitante:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Text color=\"black\">\r\n                    <b>{inventory.customer.name}</b>\r\n                  </Text>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Relação com inventariado:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Text color=\"black\">\r\n                    <b>{inventory.customer.relationship}</b>\r\n                  </Text>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Endereço:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Box sx={{ maxWidth: { xs: 'auto', sm: 'auto' } }}>\r\n                    <Text color=\"black\">\r\n                      {inventory.customer.address.street}, {inventory.customer.address.city}, {inventory.customer.address.state}\r\n                    </Text>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- INVENTARIADO -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <AvatarPrimary>\r\n              <AccountBoxIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2} width={\"100%\"}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Inventariado\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Detalhes do inventariado\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip arrow title=\"Editar\">\r\n                <IconButtonEdit sx={{ ml: 1 }}>\r\n                    <EditTwoToneIcon fontSize=\"small\" />\r\n                </IconButtonEdit>\r\n            </Tooltip>\r\n          </Box>\r\n          \r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 4 }}>\r\n            <Typography variant=\"subtitle2\">\r\n              <Grid container spacing={1}>\r\n\r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Inventariado:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Text color=\"black\">\r\n                    <b>{inventory.inventoried.name}</b>\r\n                  </Text>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Criado em:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Text color=\"black\">\r\n                    <b>{ formatDate(inventory.created_at) }</b>\r\n                  </Text>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={4} md={3} textAlign={{ sm: 'right' }}>\r\n                  <Box pr={3} pt={0} pb={0}>\r\n                    Atualizado em:\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={9}>\r\n                  <Text color=\"black\">\r\n                    <b>{ formatDate(inventory.updated_at) }</b>\r\n                  </Text>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- FAMILIARES -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <FamilyRestroomIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Familiares\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie os familiares do inventariado\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.family.map(function (family, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: family.name,\r\n                        subtitle: family.relationship,\r\n                        labels: [],\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- IMÓVEIS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <HomeWorkIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Imóveis\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie imóveis do inventariado\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.properties.map(function (property, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: property.name,\r\n                        subtitle: \"R$: \" + property.value,\r\n                        labels:[\r\n                          \"Local: \" + property.address.city + \"/\" + property.address.state,\r\n                        ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- VEÍCULOS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <DirectionsCarIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Veículos\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie veículos do inventariado\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.vehicles.map(function (vehicle, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: vehicle.name,\r\n                        subtitle: \"R$: \" + vehicle.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- SALDOS E INVESTIMENTOS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <SavingsIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Saldos e Investimentos\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie saldos e investimentos\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.investiments.map(function (investiment, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: investiment.name,\r\n                        subtitle: \"R$: \" + investiment.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- PARTICIPAÇÕES SOCIETÁRIAS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <GroupsIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Participações Societárias\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie participações societárias\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.equityholdings.map(function (equityholding, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: equityholding.name,\r\n                        subtitle: \"R$: \" + equityholding.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- CRÉDITOS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <AttachMoneyIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Créditos\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie créditos\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.credits.map(function (credit, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: credit.name,\r\n                        subtitle: \"R$: \" + credit.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- CRIPTOATIVOS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <AttachMoneyIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Criptoativos\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie criptoativos\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.cryptos.map(function (crypto, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: crypto.name,\r\n                        subtitle: \"R$: \" + crypto.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- OUTROS BENS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <AutoAwesomeMotionIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Outros Bens\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie outros bens\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.otherassets.map(function (equityholding, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: equityholding.name,\r\n                        subtitle: \"R$: \" + equityholding.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- SEGUROS -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <SecurityIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Seguros\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie seguros\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.insurances.map(function (insurance, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: insurance.name,\r\n                        subtitle: \"R$: \" + insurance.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- BENS NO EXTERIOR -----------------  */}\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <PublicIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Bens no Exterior\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Gerencie bens no exterior\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n            <Grid container spacing={3}>\r\n              {inventory.internationalassets.map(function (internationalasset, idx) {\r\n                  return (\r\n                    <CardItem\r\n                      data={{\r\n                        title: internationalasset.name,\r\n                        subtitle: \"R$: \" + internationalasset.value,\r\n                        labels:[ ]\r\n                      }}\r\n                    />\r\n                  )\r\n                })}\r\n                <CardItemAdd/>\r\n            </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid>\r\n\r\n      {/* ----------------- MENU - RESULTADO -----------------  */}\r\n      {/* <Grid item xs={12} id=\"report\">\r\n        <Card>\r\n          <Box\r\n            p={3}\r\n            display=\"flex\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <AvatarPrimary>\r\n              <AssessmentIcon />\r\n            </AvatarPrimary>\r\n            <Box pl={2}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Relatório\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\">\r\n                Visualize o resultado do cálculo do inventário\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider />\r\n\r\n          <CardContent sx={{ p: 3 }}>\r\n            <Typography variant=\"subtitle2\">\r\n              <Grid container spacing={2}>\r\n                <Grid item><Button startIcon={<AssessmentIcon />} variant=\"outlined\">Visualizar</Button></Grid>\r\n                <Grid item><Button startIcon={<PictureAsPdfIcon />} variant=\"outlined\">Exportar para PDF</Button></Grid>\r\n              </Grid>\r\n            </Typography>\r\n          </CardContent>\r\n\r\n        </Card>\r\n      </Grid> */}\r\n\r\n    </Grid>\r\n  );\r\n}","import { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Tooltip, Grid, Container, Typography, Button } from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport Footer from 'src/components/Footer';\r\nimport { useGetInventoryByIdQuery } from 'src/services/baseApi';\r\nimport Content from './Content';\r\n\r\nfunction InventoryHome() {\r\n\r\n  let { id } = useParams();\r\n  let inventoryId = parseInt(id);\r\n  const navigate = useNavigate();\r\n\r\n  // invalid id\r\n  if (id == undefined) {\r\n    navigate(`/inventories/list`);\r\n  }\r\n\r\n  // load inventory\r\n  const { data, isLoading, isSuccess  } = useGetInventoryByIdQuery(\r\n    { inventoryId: inventoryId },\r\n    { refetchOnMountOrArgChange :true, refetchOnFocus: true }\r\n  );\r\n\r\n  if (isLoading) return (<h1>Carregando</h1>)\r\n  else if (!isSuccess) {\r\n    navigate(`/inventories/list`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Detalhes do Inventário</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n              Inventário de {data.inventoried.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              Visualize aqui informações detalhadas do inventário\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Tooltip arrow title=\"Voltar para lista de inventários\">\r\n              <Button\r\n                sx={{ mt: { xs: 2, md: 0 } }}\r\n                variant=\"outlined\"\r\n                startIcon={<ArrowBackIcon fontSize=\"small\" />}\r\n                component={RouterLink}\r\n                to=\"/inventories/list\"\r\n              >\r\n                Voltar\r\n              </Button>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Grid>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Content\r\n              data={data}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InventoryHome;\r\n","export function getFormData(object) {\r\n    const formData = new FormData();\r\n    Object.keys(object).forEach(key => formData.append(key, object[key]));\r\n    return formData;\r\n}\r\n\r\nexport function formatDate(dateString) {\r\n    return new Date(dateString).toLocaleDateString('pt-br', { year: 'numeric', month: 'long', day: 'numeric' });\r\n}"],"names":["FooterWrapper","styled","Box","_ref","theme","concat","spacing","Footer","_jsx","children","Container","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","Typography","variant","PageTitle","_ref2","_Fragment","TextWrapper","palette","common","black","primary","main","secondary","success","warning","error","info","className","color","rest","AvatarAddWrapper","Avatar","colors","alpha","CardAddAction","Card","CardItemAdd","props","Grid","item","sm","Tooltip","arrow","title","CardActionArea","sx","px","CardContent","AddTwoToneIcon","fontSize","general","borderRadius","white","IconButtonEdit","IconButton","lighter","lighten","IconButtonError","_ref3","CardCc","_ref4","CardItem","_jsxs","pt","pb","fontWeight","data","subtitle","Divider","labels","map","label","idx","ml","EditTwoToneIcon","DeleteTwoToneIcon","AvatarPrimary","Content","inventory","JSON","parse","stringify","container","p","PersonIcon","pl","width","gutterBottom","pr","Text","customer","name","relationship","address","street","city","state","AccountBoxIcon","inventoried","formatDate","created_at","updated_at","FamilyRestroomIcon","family","HomeWorkIcon","properties","property","value","DirectionsCarIcon","vehicles","vehicle","SavingsIcon","investiments","investiment","GroupsIcon","equityholdings","equityholding","AttachMoneyIcon","credits","credit","cryptos","crypto","AutoAwesomeMotionIcon","otherassets","SecurityIcon","insurances","insurance","PublicIcon","internationalassets","internationalasset","id","useParams","inventoryId","parseInt","navigate","useNavigate","undefined","isLoading","isSuccess","useGetInventoryByIdQuery","refetchOnMountOrArgChange","refetchOnFocus","Helmet","PageTitleWrapper","component","Button","mt","startIcon","ArrowBackIcon","RouterLink","to","direction","dateString","Date","toLocaleDateString","year","month","day"],"sourceRoot":""}